% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/likelihood.R
\name{negLL.PLB.counts}
\alias{negLL.PLB.counts}
\title{Calculate negative log-likelihood for the bounded power-law
distribution given count data}
\usage{
negLL.PLB.counts(b, x, c, K = length(c), xmin = min(x),
  xmax = max(x), sumclogx = sum(c * log(x)))
}
\arguments{
\item{b}{value of \code{b} for which to calculate the negative log-likelihood.}

\item{x}{vector of length K corresponding to data values \code{x_k}, with a
corresponding count \code{c} being the number of times that \code{x_k} is repeated}

\item{c}{vector of length \code{K} giving the counts \code{c_k} for each \code{k=1, 2, 3, ..., K}.
Must have \code{c[1]>0} and \code{c[K]>0}, i.e. non-zero counts for first and last
\code{x_k}. Note that the \code{c_k} do not have to be integer-valued.}

\item{K}{number of \code{c_k} values (length of \code{c}).}

\item{xmin}{minimum value of \code{x_k}, as an input to avoid repeatedly calculating.}

\item{xmax}{maximum value of \code{x_k}, as an input to avoid repeatedly calculating.}

\item{sumclogx}{\code{sum( c * log(x) )}, to avoid repeatedly calculating.}
}
\value{
negative log-likelihood of the parameters given the data
}
\description{
Calculate the negative log-likelihood of the parameters \code{b}, \code{xmin} and \code{xmax}
given count data for the PLB model. Returns the negative log-likelihood.
Will be called by \code{nlm()} or similar, but \code{xmin} and \code{xmax} will then be estimated
as the min of lowest bin and max of the largest, not numerically using
likelihood.
}
\details{
For testing the MLEmid methods (using midpoints of bins), then
give \code{xmin} and \code{xmax} explicitly as the lowest and highest bin breaks
because the \code{x} values correspond to bins. But if \code{x} just represents
counts of discrete values then no need to specify \code{xmin} and \code{xmax}, they
will be automatically determined as \code{min(x)} and \code{max(x)}, respectively,
although it can be good to specify them to avoid repeated calculation.
}
\author{
Andrew Edwards
}
